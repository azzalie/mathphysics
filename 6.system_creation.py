import numpy as np

a = 0.8
b = 1.1
h = 0.05
x = [i for i in np.arange(a, b, h)]

print("В общем вид")
for i in range(1, len(x) - 1):
    print(
        f"{(1 / h ** 2):.0f}*(y_{i + 1} - {2}*y_{i} + y_{i - 1}) + {((2 / x[i]) / (2 * h)):.4f}*(y_{i + 1} - y_{i - 1}) + {-3}*y_{i} = {2}"
    )

print()
print("В преобразованном виде")
for i in range(1, len(x) - 1):
    print(
        f"{2}*(y_{i + 1} - {2}*y_{i} + y_{i - 1}) + {((2 / x[i]) * h):.4f}*(y_{i + 1} - y_{i - 1}) + {(-3 * 2 * h ** 2):.4f}*y_{i} = {(2 * 2 * h ** 2):.2f}"
    )

print()
print("Коэффициенты матрицы")
for i in range(1, len(x) - 1):
    print(
        f"{(2 - (2 / x[i]) * h):.4f}*y_{i - 1} + {(-3 * 2 * h ** 2 - 4):.3f}*y_{i} + {(2 + (2 / x[i]) * h):.4f} = {(2 * 2 * h ** 2):.2f}"
    )

print()
print("Система уравнений")
print(f"{0}: {-3}*y_{0} + {4}*y_{1} + {-1}*y_{2} = {(1.5 * 2 * h):.2f}")
for i in range(1, len(x) - 1):
    print(
        f"{i}: {(2 - (2 / x[i]) * h):.4f}*y_{i - 1} + {(-3 * 2 * h ** 2 - 4):.3f}*y_{i} + {(2 + (2 / x[i]) * h):.4f} = {(2 * 2 * h ** 2):.2f}"
    )
print(
    f"{6}: {(2 * 2 * h):.1f}*y_{6} + y_{4} + {-4}*y_{5} + {3}*y_{6} = {(3 * 2 * h):.1f}"
)
